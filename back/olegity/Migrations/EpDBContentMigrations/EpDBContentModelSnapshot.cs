// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using olegity.Data;

#nullable disable

namespace olegity.Migrations.EpDBContentMigrations
{
    [DbContext(typeof(EpDBContent))]
    partial class EpDBContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("olegity.Data.Models.Ep", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pageID")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ep");
                });

            modelBuilder.Entity("olegity.Data.Models.LinkEp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AppleMusic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deezer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spotify")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeMusic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("epID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("epID");

                    b.ToTable("LinkEp");
                });

            modelBuilder.Entity("olegity.Data.Models.TrackListEp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("epID")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("epID");

                    b.ToTable("TrackListEp");
                });

            modelBuilder.Entity("olegity.Data.Models.TranslationsEp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("epID")
                        .HasColumnType("int");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("translation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("epID");

                    b.ToTable("GenreEp");
                });

            modelBuilder.Entity("olegity.Data.Models.LinkEp", b =>
                {
                    b.HasOne("olegity.Data.Models.Ep", "Ep")
                        .WithMany("Links")
                        .HasForeignKey("epID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ep");
                });

            modelBuilder.Entity("olegity.Data.Models.TrackListEp", b =>
                {
                    b.HasOne("olegity.Data.Models.Ep", "Ep")
                        .WithMany("TrackList")
                        .HasForeignKey("epID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ep");
                });

            modelBuilder.Entity("olegity.Data.Models.TranslationsEp", b =>
                {
                    b.HasOne("olegity.Data.Models.Ep", "Ep")
                        .WithMany("TranslationsAbout")
                        .HasForeignKey("epID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ep");
                });

            modelBuilder.Entity("olegity.Data.Models.Ep", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("TrackList");

                    b.Navigation("TranslationsAbout");
                });
#pragma warning restore 612, 618
        }
    }
}
