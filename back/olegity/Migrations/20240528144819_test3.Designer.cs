// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using olegity.Data;

#nullable disable

namespace olegity.Migrations
{
    [DbContext(typeof(AlbumsDBContent))]
    [Migration("20240528144819_test3")]
    partial class test3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("olegity.Data.Models.Album", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pageID")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("olegity.Data.Models.LinkAlbum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AppleMusic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deezer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spotify")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeMusic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("albumID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("albumID");

                    b.ToTable("LinkAlbum");
                });

            modelBuilder.Entity("olegity.Data.Models.TrackListAlbum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("albumID")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("albumID");

                    b.ToTable("TrackListAlbum");
                });

            modelBuilder.Entity("olegity.Data.Models.TranslationsAlbum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("albumID")
                        .HasColumnType("int");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("translation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("albumID");

                    b.ToTable("TranslationsAlbum");
                });

            modelBuilder.Entity("olegity.Data.Models.LinkAlbum", b =>
                {
                    b.HasOne("olegity.Data.Models.Album", "Album")
                        .WithMany("Links")
                        .HasForeignKey("albumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("olegity.Data.Models.TrackListAlbum", b =>
                {
                    b.HasOne("olegity.Data.Models.Album", "Album")
                        .WithMany("TrackList")
                        .HasForeignKey("albumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("olegity.Data.Models.TranslationsAlbum", b =>
                {
                    b.HasOne("olegity.Data.Models.Album", "Album")
                        .WithMany("TranslationsAbout")
                        .HasForeignKey("albumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("olegity.Data.Models.Album", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("TrackList");

                    b.Navigation("TranslationsAbout");
                });
#pragma warning restore 612, 618
        }
    }
}
